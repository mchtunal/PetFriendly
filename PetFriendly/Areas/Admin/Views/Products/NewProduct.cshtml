@model Product
@{
    ViewBag.Title = "Yeni Ürün Ekleme Sayfası";
}

    <h2>Yeni Ürün Ekleme Sayfasına Hoşgeldin ~ADMİN~</h2>

@using (Html.BeginForm("NewProduct", "Products", FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(x => x.ProductName)
        @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ProductName, null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.UnitPrice)
        @Html.TextBoxFor(x => x.UnitPrice, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UnitPrice, null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CategoryId)
        @Html.DropDownListFor(x => x.CategoryId, null, "Seçiniz", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.CategoryId, null, new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.Label("photo","Ürün Görseli")
       <input type="file" name="photo" id="photo" class="form-control-file" , accept="image/*"/>
        @Html.ValidationMessage("photo", null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Content)
        @Html.TextAreaFor(x => x.Content, new { @class = "form-control " , rows="4", cols="80"})
        @Html.ValidationMessageFor(x => x.Content, null, new { @class = "text-danger" })
    </div>


    <br />
    <button class="btn btn-outline-primary">Kaydet</button>
}

@section scripts{
    <scrpit>
       @Scripts.Render("~/bundles/jqueryval")
    </scrpit>  
}